#!/usr/bin/env bash

### BEGIN INIT INFO
# Provides:          uwsgi
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the uwsgi app server
# Description:       starts uwsgi app server using start-stop-daemon
### END INIT INFO
. /etc/rc.d/init.d/functions

PATH=/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/uwsgi
RUN=/var/run/cloudrunner
OWNER=nginx
NAME="cloudrunner-api"
DESC="Cloudrunner API service"
OP=$1
NUM_WORKERS=10
LISTEN_PORT=5558
PIDFILE=$RUN/$NAME.pid

[[ -x $DAEMON ]] || exit 0
[[ -d $RUN ]] || mkdir -p $RUN && chown $OWNER $RUN

DAEMON_OPTS="-p $NUM_WORKERS --master --socket :$LISTEN_PORT \
    --daemonize=/var/log/cloudrunner-api.log \
    --pidfile=$PIDFILE \
    --pecan /etc/cloudrunner/api.config.py"

do_pid_check()
{
    [[ -f $PIDFILE ]] || return 0
    local PID=$(cat $PIDFILE)
    for p in $(pgrep $DAEMON); do
        [[ $p == $PID ]] && return 1
    done
    return 0
}


do_start()
{
    if [ ! -f  $PIDFILE ]; then
        $DAEMON $DAEMON_OPTS
        sleep 1
        local PID=$(cat $PIDFILE)
        echo "Started $NAME ($PID)"
    else
        echo "Already running, remove pid file first!"
    fi
}

send_sig()
{
    [[ -f $PIDFILE ]] && kill $1 $(cat $PIDFILE) > /dev/null 2>&1
}

wait_and_clean_pidfiles()
{
    until do_pid_check $PIDFILE; do
        echo -n "";
    done
    rm -f $PIDFILE
}

do_stop()
{
    send_sig -3
    wait_and_clean_pidfiles
}

do_reload()
{
    send_sig -1
}

do_force_reload()
{
    send_sig -15
}

get_status(){
    status -p $PIDFILE $NAME
}

case "$OP" in
    start)
        echo "Starting $DESC: "
        do_start
        echo "$NAME."
        ;;
    stop)
        echo -n "Stopping $DESC: "
        do_stop
        echo "$NAME."
        ;;
    restart)
        echo -n "Reloading $DESC: "
        do_reload
        echo "$NAME."
        ;;
    force-restart)
        echo -n "Force-reloading $DESC: "
        do_force_reload
        echo "$NAME."
       ;;
    status)
        get_status
        ;;
    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|reload|force-reload|status}" >&2
        exit 1
        ;;
esac
exit 0
