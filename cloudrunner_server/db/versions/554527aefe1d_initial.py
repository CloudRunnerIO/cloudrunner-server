"""Initial

Revision ID: 554527aefe1d
Revises: None
Create Date: 2014-12-15 16:55:56.475297

"""

# revision identifiers, used by Alembic.
revision = '554527aefe1d'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usagetiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('total_repos', sa.Integer(), nullable=True),
    sa.Column('user_repos', sa.Integer(), nullable=True),
    sa.Column('external_repos', sa.Boolean(), nullable=True),
    sa.Column('nodes', sa.Integer(), nullable=True),
    sa.Column('users', sa.Integer(), nullable=True),
    sa.Column('groups', sa.Integer(), nullable=True),
    sa.Column('roles', sa.Integer(), nullable=True),
    sa.Column('max_timeout', sa.Integer(), nullable=True),
    sa.Column('max_concurrent_tasks', sa.Integer(), nullable=True),
    sa.Column('log_retention_days', sa.Integer(), nullable=True),
    sa.Column('cron_jobs', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_usagetiers'))
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('uid', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('cert_ca', sa.Text(), nullable=True),
    sa.Column('cert_key', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('tier_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tier_id'], ['usagetiers.id'], name=op.f('fk_organizations_tier_id_usagetiers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_organizations')),
    sa.UniqueConstraint('name', name=op.f('uq_organizations_name')),
    sa.UniqueConstraint('uid', name=op.f('uq_organizations_uid'))
    )
    op.create_table('nodegroups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], [u'organizations.id'], name=op.f('fk_nodegroups_org_id_organizations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nodegroups')),
    sa.UniqueConstraint('name', 'org_id', name='name__org_id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], name=op.f('fk_groups_org_id_organizations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_groups')),
    sa.UniqueConstraint('name', 'org_id', name='name__org_id')
    )
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('meta', sa.Text(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], [u'organizations.id'], name=op.f('fk_nodes_org_id_organizations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nodes')),
    sa.UniqueConstraint('name', 'org_id', name='name__org_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], name=op.f('fk_users_org_id_organizations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('servers', sa.String(length=100), nullable=True),
    sa.Column('as_user', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_roles_group_id_groups')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_roles_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('group_id', 'as_user', 'servers', name='group_id__as_user__servers'),
    sa.UniqueConstraint('user_id', 'as_user', 'servers', name='user_id__as_user__servers')
    )
    op.create_table('nodetags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.Column('node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], [u'nodes.id'], name=op.f('fk_nodetags_node_id_nodes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nodetags'))
    )
    op.create_table('node2group',
    sa.Column('node_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['nodegroups.id'], name=op.f('fk_node2group_group_id_nodegroups')),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], name=op.f('fk_node2group_node_id_nodes'))
    )
    op.create_table('user2group',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_user2group_group_id_groups')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user2group_user_id_users'))
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_permissions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions')),
    sa.UniqueConstraint('name', 'user_id', name='name__user_id')
    )
    op.create_table('repositories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], [u'organizations.id'], name=op.f('fk_repositories_org_id_organizations')),
    sa.ForeignKeyConstraint(['owner_id'], [u'users.id'], name=op.f('fk_repositories_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_repositories')),
    sa.UniqueConstraint('name', 'org_id', name='name__org_id'),
    sa.UniqueConstraint('name', name=op.f('uq_repositories_name'))
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('value', sa.String(length=64), nullable=True),
    sa.Column('scope', sa.Enum('LOGIN', 'TRIGGER', 'EXECUTE', 'RECOVER'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tokens')),
    sa.UniqueConstraint('user_id', 'value', name='user_id__value')
    )
    op.create_table('apikeys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_apikeys_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_apikeys')),
    sa.UniqueConstraint('value', name=op.f('uq_apikeys_value'))
    )
    op.create_table('repository_creds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=500), nullable=True),
    sa.Column('link', sa.String(length=500), nullable=True),
    sa.Column('auth_user', sa.String(length=500), nullable=True),
    sa.Column('auth_pass', sa.String(length=500), nullable=True),
    sa.Column('auth_args', sa.String(length=500), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], [u'repositories.id'], name=op.f('fk_repository_creds_repository_id_repositories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_repository_creds'))
    )
    op.create_table('folders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=500), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], [u'users.id'], name=op.f('fk_folders_owner_id_users')),
    sa.ForeignKeyConstraint(['parent_id'], ['folders.id'], name=op.f('fk_folders_parent_id_folders')),
    sa.ForeignKeyConstraint(['repository_id'], [u'repositories.id'], name=op.f('fk_folders_repository_id_repositories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_folders')),
    sa.UniqueConstraint('full_name', 'repository_id', name='name__repository_id'),
    sa.UniqueConstraint('name', 'parent_id', name='name__parent_id')
    )
    op.create_table('scripts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('folder_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('allow_sudo', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], [u'folders.id'], name=op.f('fk_scripts_folder_id_folders')),
    sa.ForeignKeyConstraint(['owner_id'], [u'users.id'], name=op.f('fk_scripts_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scripts')),
    sa.UniqueConstraint('name', 'folder_id', name='name__folder_id')
    )
    op.create_table('revisions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('draft', sa.Boolean(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('script_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['script_id'], ['scripts.id'], name=op.f('fk_revisions_script_id_scripts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_revisions')),
    sa.UniqueConstraint('script_id', 'version', name='script_id__version')
    )
    op.create_table('batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], [u'scripts.id'], name=op.f('fk_batches_source_id_scripts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_batches'))
    )
    op.create_table('taskgroups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], name=op.f('fk_taskgroups_batch_id_batches')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taskgroups'))
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.Column('arguments', sa.String(length=1000), nullable=True),
    sa.Column('key', sa.String(length=32), nullable=True),
    sa.Column('target_path', sa.String(length=500), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('share_url', sa.String(length=500), nullable=True),
    sa.Column('revision_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_jobs_owner_id_users')),
    sa.ForeignKeyConstraint(['revision_id'], ['revisions.id'], name=op.f('fk_jobs_revision_id_revisions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_jobs')),
    sa.UniqueConstraint('name', 'owner_id', name='name__owner_id')
    )
    op.create_index(op.f('ix_jobs_name'), 'jobs', ['name'], unique=False)
    op.create_table('scriptsteps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('root', sa.Boolean(), nullable=True),
    sa.Column('as_sudo', sa.Boolean(), nullable=True),
    sa.Column('version', sa.String(length=40), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('script_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], [u'batches.id'], name=op.f('fk_scriptsteps_batch_id_batches')),
    sa.ForeignKeyConstraint(['script_id'], [u'scripts.id'], name=op.f('fk_scriptsteps_script_id_scripts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scriptsteps'))
    )
    op.create_table('conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('arguments', sa.Text(), nullable=True),
    sa.Column('src_id', sa.Integer(), nullable=True),
    sa.Column('dst_id', sa.Integer(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], [u'batches.id'], name=op.f('fk_conditions_batch_id_batches')),
    sa.ForeignKeyConstraint(['dst_id'], [u'scriptsteps.id'], name=op.f('fk_conditions_dst_id_scriptsteps')),
    sa.ForeignKeyConstraint(['src_id'], [u'scriptsteps.id'], name=op.f('fk_conditions_src_id_scriptsteps')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_conditions'))
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=40), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('exec_start', sa.Integer(), nullable=True),
    sa.Column('exec_end', sa.Integer(), nullable=True),
    sa.Column('exit_code', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('taskgroup_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('revision_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_tasks_owner_id_users')),
    sa.ForeignKeyConstraint(['parent_id'], ['tasks.id'], name=op.f('fk_tasks_parent_id_tasks')),
    sa.ForeignKeyConstraint(['revision_id'], ['revisions.id'], name=op.f('fk_tasks_revision_id_revisions')),
    sa.ForeignKeyConstraint(['taskgroup_id'], [u'taskgroups.id'], name=op.f('fk_tasks_taskgroup_id_taskgroups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks'))
    )
    op.create_index(op.f('ix_tasks_uuid'), 'tasks', ['uuid'], unique=True)
    op.create_table('runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=40), nullable=True),
    sa.Column('lang', sa.String(length=100), nullable=True),
    sa.Column('env_in', sa.Text(), nullable=True),
    sa.Column('env_out', sa.Text(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('exit_code', sa.Integer(), nullable=True),
    sa.Column('target', sa.Text(), nullable=True),
    sa.Column('full_script', sa.Text(), nullable=True),
    sa.Column('exec_start', sa.Integer(), nullable=True),
    sa.Column('exec_end', sa.Integer(), nullable=True),
    sa.Column('step_index', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('exec_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exec_user_id'], ['users.id'], name=op.f('fk_runs_exec_user_id_users')),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_runs_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_runs'))
    )
    op.create_index(op.f('ix_runs_uuid'), 'runs', ['uuid'], unique=True)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_tags_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags'))
    )
    op.create_table('trigger_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('type', sa.String(length=256), nullable=True),
    sa.Column('arguments', sa.String(length=1000), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_trigger_types_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_trigger_types'))
    )
    op.create_index(op.f('ix_trigger_types_name'), 'trigger_types', ['name'], unique=False)
    op.create_index(op.f('ix_trigger_types_type'), 'trigger_types', ['type'], unique=False)
    op.create_table('run_nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('exit_code', sa.Integer(), nullable=True),
    sa.Column('as_user', sa.String(length=200), nullable=True),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], name=op.f('fk_run_nodes_run_id_runs')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_run_nodes'))
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('run_nodes')
    op.drop_index(op.f('ix_trigger_types_type'), table_name='trigger_types')
    op.drop_index(op.f('ix_trigger_types_name'), table_name='trigger_types')
    op.drop_table('trigger_types')
    op.drop_table('tags')
    op.drop_index(op.f('ix_runs_uuid'), table_name='runs')
    op.drop_table('runs')
    op.drop_index(op.f('ix_tasks_uuid'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_table('conditions')
    op.drop_table('scriptsteps')
    op.drop_index(op.f('ix_jobs_name'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_table('taskgroups')
    op.drop_table('batches')
    op.drop_table('revisions')
    op.drop_table('scripts')
    op.drop_table('folders')
    op.drop_table('repository_creds')
    op.drop_table('apikeys')
    op.drop_table('tokens')
    op.drop_table('repositories')
    op.drop_table('permissions')
    op.drop_table('user2group')
    op.drop_table('node2group')
    op.drop_table('nodetags')
    op.drop_table('roles')
    op.drop_table('users')
    op.drop_table('nodes')
    op.drop_table('groups')
    op.drop_table('nodegroups')
    op.drop_table('organizations')
    op.drop_table('usagetiers')
    ### end Alembic commands ###
