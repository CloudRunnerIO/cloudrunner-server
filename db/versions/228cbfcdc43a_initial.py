"""Initial

Revision ID: 228cbfcdc43a
Revises: None
Create Date: 2014-08-27 11:30:00.876567

"""

# revision identifiers, used by Alembic.
revision = '228cbfcdc43a'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('uid', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('cert_ca', sa.Text(), nullable=True),
    sa.Column('cert_key', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'org_id', name='name__org_id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'user_id', name='name__user_id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('servers', sa.String(length=100), nullable=True),
    sa.Column('as_user', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'as_user', 'servers', name='group_id__as_user__servers'),
    sa.UniqueConstraint('user_id', 'as_user', 'servers', name='user_id__as_user__servers')
    )
    op.create_table('repositories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('is_link', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], [u'organizations.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], [u'users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', 'org_id', name='name__org_id')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('value', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'value', name='user_id__value')
    )
    op.create_table('user2group',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('uuid', sa.String(length=40), nullable=True),
    sa.Column('exit_code', sa.Integer(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('source_type', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(length=1000), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logs_uuid'), 'logs', ['uuid'], unique=True)
    op.create_table('folders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=500), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], [u'users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['folders.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], [u'repositories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name', 'repository_id', name='name__repository_id'),
    sa.UniqueConstraint('name', 'parent_id', name='name__parent_id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['log_id'], ['logs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('target', sa.Text(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('lang', sa.String(length=100), nullable=True),
    sa.Column('script', sa.Text(), nullable=True),
    sa.Column('env_in', sa.Text(), nullable=True),
    sa.Column('env_out', sa.Text(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['log_id'], ['logs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repository_creds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=500), nullable=True),
    sa.Column('link', sa.String(length=500), nullable=True),
    sa.Column('auth_user', sa.String(length=500), nullable=True),
    sa.Column('auth_pass', sa.String(length=500), nullable=True),
    sa.Column('auth_args', sa.String(length=500), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], [u'repositories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scripts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('folder_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], [u'folders.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], [u'users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'folder_id', name='name__folder_id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.Column('arguments', sa.String(length=1000), nullable=True),
    sa.Column('key', sa.String(length=32), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['target_id'], ['scripts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'owner_id', name='name__owner_id')
    )
    op.create_index(op.f('ix_jobs_name'), 'jobs', ['name'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jobs_name'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_table('scripts')
    op.drop_table('repository_creds')
    op.drop_table('steps')
    op.drop_table('tags')
    op.drop_table('folders')
    op.drop_index(op.f('ix_logs_uuid'), table_name='logs')
    op.drop_table('logs')
    op.drop_table('user2group')
    op.drop_table('tokens')
    op.drop_table('repositories')
    op.drop_table('roles')
    op.drop_table('permissions')
    op.drop_table('groups')
    op.drop_table('users')
    op.drop_table('organizations')
    ### end Alembic commands ###
